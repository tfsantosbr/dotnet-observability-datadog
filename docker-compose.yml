services:
  companies-api:
    container_name: companies-api
    image: companies-api
    build:
      context: .
      dockerfile: src/Companies.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - LogFilePath=/app/logs/companies-api-logs.json
      - DD_ENV=development
      - DD_SERVICE=companies-api
      - DD_VERSION=1.0.0
      - DD_AGENT_HOST=host.docker.internal
      - DD_LOGS_INJECTION=true
      - DD_TRACE_ENABLED=true
      - DD_TRACE_AGENT_PORT=8126
      - DD_TRACE_HEADER_TAGS=Correlation-Id:correlation_id
    ports:
      - 5147:8080
    volumes:
      - ./logs:/app/logs
    depends_on:
      - servicebus

  companies-importer:
    container_name: companies-importer
    image: companies-importer
    build:
      context: .
      dockerfile: src/Companies.Importer/Dockerfile
    environment:
      - DOTNETCORE_ENVIRONMENT=Development
      - LogFilePath=/app/logs/companies-importer-logs.json
      - DD_ENV=development
      - DD_SERVICE=companies-importer
      - DD_VERSION=1.0.0
      - DD_AGENT_HOST=host.docker.internal
      - DD_LOGS_INJECTION=true
      - DD_TRACE_ENABLED=true
      - DD_TRACE_AGENT_PORT=8126
      - DD_TRACE_HEADER_TAGS=Correlation-Id:correlation_id
    volumes:
      - ./logs:/app/logs
    depends_on:
      - servicebus

  dogstatsd:
    image: datadog/dogstatsd:latest
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
    ports:
      - "8125:8125/udp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro

  datadog:
    image: datadog/agent:latest
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=datadoghq.com
      - DD_APM_ENABLED=true
      - DD_LOGS_ENABLED=true
    ports:
      - "8126:8126"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - ./config/datadog:/conf.d/
      - ./logs:/app/logs

  servicebus:
    image: mcr.microsoft.com/azure-messaging/servicebus-emulator:latest
    volumes:
      - "./config/servicebus/config.json:/ServiceBus_Emulator/ConfigFiles/Config.json"
    ports:
      - "5672:5672"
    environment:
      SQL_SERVER: sqledge
      MSSQL_SA_PASSWORD: ${MSSQL_PASSWORD}
      ACCEPT_EULA: "Y"
    depends_on:
      - sqledge

  sqledge:
    image: "mcr.microsoft.com/azure-sql-edge:latest"
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: ${MSSQL_PASSWORD}
